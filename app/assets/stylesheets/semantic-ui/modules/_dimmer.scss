/*!
 * # Semantic UI - Dimmer
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */

/*******************************
            Theme
*******************************/

$type    : 'module';
$element : 'dimmer';


/*******************************
            Dimmer
*******************************/

.dimmable:not(.body) {
  position: $dimmable-position;
}

.ui.dimmer {
  display: none;
  position: $dimmer-position;
  top: 0em !important;
  left: 0em !important;

  width: 100%;
  height: 100%;

  text-align: $text-align;
  vertical-align: $vertical-align;

  background-color: $background-color;
  opacity: $hidden-opacity;
  line-height: $line-height;

  animation-fill-mode: both;
  animation-duration: $duration;
  transition: $transition;

  user-select: none;
  will-change: opacity;
  z-index: $z-index;
}

/* Dimmer Content */
.ui.dimmer > .content {
  width: 100%;
  height: 100%;
  display: $content-display;
  user-select: text;
}
.ui.dimmer > .content > * {
  display: $content-child-display;
  vertical-align: $vertical-align;
  color: $text-color;
}


/* Loose Coupling */
.ui.segment > .ui.dimmer {
  border-radius: inherit !important;
}

/*******************************
            States
*******************************/

.animating.dimmable:not(body),
.dimmed.dimmable:not(body) {
  overflow: $overflow;
}

.dimmed.dimmable > .ui.animating.dimmer,
.dimmed.dimmable > .ui.visible.dimmer,
.ui.active.dimmer {
  display: block;
  opacity: $visible-opacity;
}

.ui.disabled.dimmer {
  width: 0 !important;
  height: 0 !important;
}

/*******************************
           Variations
*******************************/

/*--------------
      Page
---------------*/

.ui.page.dimmer {
  position: $page-dimmer-position;
  transform-style: $transform-style;
  perspective: $perspective;
  transform-origin: center center;
}

body.animating.in.dimmable,
body.dimmed.dimmable {
  overflow: hidden;
}

body.dimmable > .dimmer {
  position: fixed;
}

/*--------------
    Blurring
---------------*/

.blurring.dimmable > :not(.dimmer) {
  filter: $blurred-start-filter;
  transition: $blurred-transition;
}
.blurring.dimmed.dimmable > :not(.dimmer) {
  filter: $blurred-end-filter;
}

/* Dimmer Color */
.blurring.dimmable > .dimmer {
  background-color: $blurred-background-color;
}
.blurring.dimmable > .inverted.dimmer {
  background-color: $blurred-inverted-background-color;
}

/*--------------
    Aligned
---------------*/

.ui.dimmer > .top.aligned.content > * {
  vertical-align: top;
}
.ui.dimmer > .bottom.aligned.content > * {
  vertical-align: bottom;
}

/*--------------
    Inverted
---------------*/

.ui.inverted.dimmer {
  background-color: $inverted-background-color;
}
.ui.inverted.dimmer > .content > * {
  color: $text-color;
}

/*--------------
     Simple
---------------*/

/* Displays without javascript */
.ui.simple.dimmer {
  display: block;
  overflow: hidden;
  opacity: 1;
  width: 0%;
  height: 0%;
  z-index: -100;
  background-color: $simple-start-background-color;
}
.dimmed.dimmable > .ui.simple.dimmer {
  overflow: visible;
  opacity: 1;
  width: 100%;
  height: 100%;
  background-color: $simple-end-background-color;
  z-index: $simple-z-index;
}

.ui.simple.inverted.dimmer {
  background-color: $simple-inverted-start-background-color;
}
.dimmed.dimmable > .ui.simple.inverted.dimmer {
  background-color: $simple-inverted-end-background-color;
}


